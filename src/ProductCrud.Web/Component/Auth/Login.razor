@page "/login"
@using System.ComponentModel.DataAnnotations
@using ProductCrud.Web.Services;
@inject IAccountManagement Acc
@inject NavigationManager NavigationManager

<PageTitle>Login</PageTitle>

<h3>Login</h3>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="loginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="username" class="form-label">Username</label>
        <InputText id="username" @bind-Value="loginModel.Username" class="form-control" />
        <ValidationMessage For="@(() => loginModel.Username)" />
    </div>

    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <InputText type="password" id="password" @bind-Value="loginModel.Password" class="form-control" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@if (errors)
{
    @foreach (var error in errorList)
    {
        <div class="alert alert-danger mt-3">@error</div>
    }
}

<div class="mt-3">
    <a href="/register">Don't have an account? Register</a>
</div>

@code {
    private bool success, errors;
    private LoginModel loginModel = new LoginModel();
    private string[] errorList = [];

    private async Task HandleLogin()
    {
        var result = await Acc.LoginAsync(loginModel.Username, loginModel.Password);

        if (result.IsSuccess)
        {
            NavigationManager.NavigateTo("/products");
        }
        else
        {
            errors = false;
            errorList = result.ErrorList;
        }
    }

    public class LoginModel
    {
        [Required]
        public string Username { get; set; } = string.Empty;

        [Required]
        public string Password { get; set; } = string.Empty;
    }
}